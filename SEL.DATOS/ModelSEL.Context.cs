//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEL.DATOS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SELEntities : DbContext
    {
        public SELEntities()
            : base("name=SELEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EstadoSEL> EstadoSEL { get; set; }
        public virtual DbSet<ServicioSEL> ServicioSEL { get; set; }
        public virtual DbSet<SolicitudSEL> SolicitudSEL { get; set; }
        public virtual DbSet<UsuarioSEL> UsuarioSEL { get; set; }
    
        public virtual ObjectResult<PA_INICIAR_SESION_Result> PA_INICIAR_SESION(string correo, string password)
        {
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_INICIAR_SESION_Result>("PA_INICIAR_SESION", correoParameter, passwordParameter);
        }
    
        public virtual int PA_SOLICITAR_SERVICIO(Nullable<decimal> idUsuario, string fechaServicio, string horaServicio, string fechaCita, string horaCita, string fechaRecojida, string horaRecogida, string origen, string destino)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(decimal));
    
            var fechaServicioParameter = fechaServicio != null ?
                new ObjectParameter("FechaServicio", fechaServicio) :
                new ObjectParameter("FechaServicio", typeof(string));
    
            var horaServicioParameter = horaServicio != null ?
                new ObjectParameter("HoraServicio", horaServicio) :
                new ObjectParameter("HoraServicio", typeof(string));
    
            var fechaCitaParameter = fechaCita != null ?
                new ObjectParameter("FechaCita", fechaCita) :
                new ObjectParameter("FechaCita", typeof(string));
    
            var horaCitaParameter = horaCita != null ?
                new ObjectParameter("HoraCita", horaCita) :
                new ObjectParameter("HoraCita", typeof(string));
    
            var fechaRecojidaParameter = fechaRecojida != null ?
                new ObjectParameter("FechaRecojida", fechaRecojida) :
                new ObjectParameter("FechaRecojida", typeof(string));
    
            var horaRecogidaParameter = horaRecogida != null ?
                new ObjectParameter("HoraRecogida", horaRecogida) :
                new ObjectParameter("HoraRecogida", typeof(string));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var destinoParameter = destino != null ?
                new ObjectParameter("Destino", destino) :
                new ObjectParameter("Destino", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PA_SOLICITAR_SERVICIO", idUsuarioParameter, fechaServicioParameter, horaServicioParameter, fechaCitaParameter, horaCitaParameter, fechaRecojidaParameter, horaRecogidaParameter, origenParameter, destinoParameter);
        }
    
        public virtual ObjectResult<PA_CONSULTAR_SOLICITUDES_SERVICIO_POR_ID_USUARIO_Result> PA_CONSULTAR_SOLICITUDES_SERVICIO_POR_ID_USUARIO(Nullable<decimal> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PA_CONSULTAR_SOLICITUDES_SERVICIO_POR_ID_USUARIO_Result>("PA_CONSULTAR_SOLICITUDES_SERVICIO_POR_ID_USUARIO", idUsuarioParameter);
        }
    }
}
